"use strict";(self.webpackChunkrke_2_docs=self.webpackChunkrke_2_docs||[]).push([[5358],{4959:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=r(5893),s=r(1151);const i={title:"Secrets Encryption"},c=void 0,o={id:"security/secrets_encryption",title:"Secrets Encryption",description:"Secrets Encryption Config",source:"@site/docs/security/secrets_encryption.md",sourceDirName:"security",slug:"/security/secrets_encryption",permalink:"/docs-rke2/security/secrets_encryption",draft:!1,unlisted:!1,editUrl:"https://github.com/rancher/rke2-docs/edit/main/docs/security/secrets_encryption.md",tags:[],version:"current",lastUpdatedAt:1705617228,formattedLastUpdatedAt:"Jan 18, 2024",frontMatter:{title:"Secrets Encryption"},sidebar:"mySidebar",previous:{title:"SELinux",permalink:"/docs-rke2/security/selinux"},next:{title:"Certificate Management",permalink:"/docs-rke2/security/certificates"}},a={},l=[{value:"Secrets Encryption Config",id:"secrets-encryption-config",level:2},{value:"Secrets Encryption Tool",id:"secrets-encryption-tool",level:2},{value:"New Encryption Key Rotation",id:"new-encryption-key-rotation",level:3},{value:"Encryption Key Rotation Classic",id:"encryption-key-rotation-classic",level:3},{value:"Secrets Encryption Status",id:"secrets-encryption-status",level:3}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components},{TabItem:r,Tabs:i}=n;return r||p("TabItem",!0),i||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"secrets-encryption-config",children:"Secrets Encryption Config"}),"\n",(0,t.jsxs)(n.p,{children:["RKE2 supports ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/",children:"encrypting secrets at rest"}),", and will do the following automatically:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Generate an AES-CBC key"}),"\n",(0,t.jsx)(n.li,{children:"Generate an encryption config file with the generated key:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'{\n  "kind": "EncryptionConfiguration",\n  "apiVersion": "apiserver.config.k8s.io/v1",\n  "resources": [\n    {\n      "resources": [\n        "secrets"\n      ],\n      "providers": [\n        {\n          "aescbc": {\n            "keys": [\n              {\n                "name": "aescbckey",\n                "secret": "xxxxxxxxxxxxxxxxxxx"\n              }\n            ]\n          }\n        },\n        {\n          "identity": {}\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pass the config to the Kubernetes APIServer as encryption-provider-config"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Once enabled any created secret will be encrypted with this key. Note that if you disable encryption then any encrypted secrets will not be readable until you enable encryption again using the same key."}),"\n",(0,t.jsx)(n.h2,{id:"secrets-encryption-tool",children:"Secrets Encryption Tool"}),"\n",(0,t.jsx)(n.admonition,{title:"Version Gate",type:"info",children:(0,t.jsxs)(n.p,{children:["Available as of ",(0,t.jsx)(n.a,{href:"https://github.com/rancher/rke2/releases/tag/v1.21.8%2Brke2r1",children:"v1.21.8+rke2r1"})]})}),"\n",(0,t.jsxs)(n.p,{children:["RKE2 contains a subcommand ",(0,t.jsx)(n.code,{children:"secrets-encrypt"}),", which allows administrators to perform the following tasks:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Adding new encryption keys"}),"\n",(0,t.jsx)(n.li,{children:"Rotating and deleting encryption keys"}),"\n",(0,t.jsx)(n.li,{children:"Reencrypting secrets"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"danger",children:(0,t.jsxs)(n.p,{children:["Failure to follow proper procedure when rotating secrets encryption keys can cause permanent data loss. ",(0,t.jsx)(n.a,{href:"/docs-rke2/backup_restore",children:"Creating a snapshot"})," before rotating is recommended. Proceed with caution."]})}),"\n",(0,t.jsx)(n.h3,{id:"new-encryption-key-rotation",children:"New Encryption Key Rotation"}),"\n",(0,t.jsxs)(n.admonition,{title:"Expiremental Version Gate",type:"warning",children:[(0,t.jsxs)(n.p,{children:["Available as of ",(0,t.jsx)(n.a,{href:"https://github.com/rancher/rke2/releases/tag/v1.28.1%2Brke2r1",children:"v1.28.1+rke2r1"}),". This new version of the tool utilizes K8s ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/#configure-automatic-reloading",children:"automatic config reloading"})," which is currently in beta. GA is expected in v1.29.0"]}),(0,t.jsxs)(n.p,{children:["For older releases, see ",(0,t.jsx)(n.a,{href:"#encryption-key-rotation-classic",children:"Encryption Key Rotation Classic"})]})]}),"\n",(0,t.jsxs)(i,{groupId:"se",children:[(0,t.jsxs)(r,{value:"Single-Server",default:!0,children:[(0,t.jsx)(n.p,{children:"To rotate secrets encryption keys on a single-server cluster:"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Rotate secrets encryption keys"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rke2 secrets-encrypt rotate-keys\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Wait for reencryption to finish. Watch the server logs, or wait for:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ rke2 secrets-encrypt status\nEncryption Status: Enabled\nCurrent Rotation Stage: reencrypt_finished\n"})}),"\n"]}),"\n"]})]}),(0,t.jsxs)(r,{value:"High-Availability",children:[(0,t.jsx)(n.p,{children:"To rotate secrets encryption keys on HA setups:"}),(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["In this example, 3 servers are used to for a HA cluster, referred to as S1, S2, S3. It is recommended that you pick one server node from which to run the ",(0,t.jsx)(n.code,{children:"secrets-encrypt"})," commands."]})}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Rotate secrets encryption keys on S1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"rke2 secrets-encrypt rotate-keys\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Wait for reencryption to finish. Watch the server logs, or wait for:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ rke2 secrets-encrypt status\nEncryption Status: Enabled\nCurrent Rotation Stage: reencrypt_finished\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"RKE2 will reencrypt ~5 secrets per second. Clusters with large # of secrets can take several minutes to reencrypt. You can track progress in the server logs."})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Sequentially Restart RKE2 on S1, S2, S3"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"systemctl restart rke2-server.service\n"})}),"\n",(0,t.jsx)(n.p,{children:"Wait for the systemctl command to return before restarting the next server."}),"\n"]}),"\n"]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"encryption-key-rotation-classic",children:"Encryption Key Rotation Classic"}),"\n",(0,t.jsxs)(i,{groupId:"se",children:[(0,t.jsxs)(r,{value:"Single-Server",default:!0,children:[(0,t.jsx)(n.p,{children:"To rotate secrets encryption keys on a single-node cluster:"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Prepare:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rke2 secrets-encrypt prepare\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Restart the ",(0,t.jsx)(n.code,{children:"kube-apiserver"})," pod:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'# Get the kube-apiserver container ID\nexport CONTAINER_RUNTIME_ENDPOINT="unix:///var/run/k3s/containerd/containerd.sock"\ncrictl ps --name kube-apiserver\n# Stop the pod\ncrictl stop <CONTAINER_ID>\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Rotate:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rke2 secrets-encrypt rotate\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Restart the ",(0,t.jsx)(n.code,{children:"kube-apiserver"})," pod again"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Reencrypt:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rke2 secrets-encrypt reencrypt\n"})}),"\n"]}),"\n"]})]}),(0,t.jsxs)(r,{value:"High-Availability",children:[(0,t.jsx)(n.p,{children:"To rotate secrets encryption keys on HA setups:"}),(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["In this example, 3 servers are used to for a HA cluster, referred to as S1, S2, S3. While not required, it is recommended that you pick one server node from which to run the ",(0,t.jsx)(n.code,{children:"secrets-encrypt"})," commands."]})}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Prepare on S1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rke2 secrets-encrypt prepare\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Sequentially Restart S1, S2, S3"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"systemctl restart rke2-server.service\n"})}),"\n",(0,t.jsx)(n.p,{children:"Wait for the systemctl command to return before restarting the next server."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Rotate on S1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rke2 secrets-encrypt rotate\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Sequentially Restart S1, S2, S3"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Reencrypt on S1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rke2 secrets-encrypt reencrypt\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Wait until reencryption is finished, either via server logs ",(0,t.jsx)(n.code,{children:"journalctl -u rke2-server"})," or via ",(0,t.jsx)(n.code,{children:"rke2 secrets-encrypt status"}),". The status will return ",(0,t.jsx)(n.code,{children:"reencrypt_finished"})," when done."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Sequentially Restart S1, S2, S3"}),"\n"]}),"\n"]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"secrets-encryption-status",children:"Secrets Encryption Status"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"secrets-encrypt status"})," subcommand displays information about the current status of secrets encryption on the node."]}),"\n",(0,t.jsx)(n.p,{children:"An example of the command on a single-server node:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ rke2 secrets-encrypt status\nEncryption Status: Enabled\nCurrent Rotation Stage: start\nServer Encryption Hashes: All hashes match\n\nActive  Key Type  Name\n------  --------  ----\n *      AES-CBC   aescbckey\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"Another example on HA cluster, after rotating the keys, but before restarting the servers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ rke2 secrets-encrypt status\nEncryption Status: Enabled\nCurrent Rotation Stage: rotate\nServer Encryption Hashes: hash does not match between node-1 and node-2\n\nActive  Key Type  Name\n------  --------  ----\n *      AES-CBC   aescbckey-2021-12-10T22:54:38Z\n        AES-CBC   aescbckey\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"Details on each section are as follows:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Encryption Status"}),": Displayed whether secrets encryption is disabled or enabled on the node"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Current Rotation Stage"}),": Indicates the current rotation stage on the node.",(0,t.jsx)(n.br,{}),"\n","Stages are: ",(0,t.jsx)(n.code,{children:"start"}),", ",(0,t.jsx)(n.code,{children:"prepare"}),", ",(0,t.jsx)(n.code,{children:"rotate"}),", ",(0,t.jsx)(n.code,{children:"reencrypt_request"}),", ",(0,t.jsx)(n.code,{children:"reencrypt_active"}),", ",(0,t.jsx)(n.code,{children:"reencrypt_finished"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Server Encryption Hashes"}),": Useful for HA clusters, this indicates whether all servers are on the same stage with their local files. This can be used to identify whether a restart of servers is required before proceeding to the next stage. In the HA example above, node-1 and node-2 have different hashes, indicating that they currently do not have the same encryption configuration. Restarting the servers will sync up their configuration."]}),"\n"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Key Table"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Active"}),(0,t.jsxs)(n.td,{children:["The ",(0,t.jsx)(n.code,{children:"*"})," indicates which, if any, of the keys are currently used for secrets encryption. The active key is used by Kubernetes to encrypt any new secrets."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Key Type"}),(0,t.jsxs)(n.td,{children:["RKE2 only supports the ",(0,t.jsx)(n.code,{children:"AES-CBC"})," key type. Find more info ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/#providers",children:"here."})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Name"}),(0,t.jsxs)(n.td,{children:["Name of the encryption key. Default is ",(0,t.jsx)(n.code,{children:"aescbckey-<DATE_AND_TIME>"}),"."]})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var t=r(7294);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);