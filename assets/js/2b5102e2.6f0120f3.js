"use strict";(self.webpackChunkrke_2_docs=self.webpackChunkrke_2_docs||[]).push([[109],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>m});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),d=o,m=u["".concat(c,".").concat(d)]||u[d]||g[d]||a;return r?t.createElement(m,i(i({ref:n},p),{},{components:r})):t.createElement(m,i({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7110:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var t=r(7462),o=(r(7294),r(3905));const a={title:"Logging"},i=void 0,l={unversionedId:"reference/logging",id:"reference/logging",title:"Logging",description:"When running with systemd, logs are sent to journald and can be viewed using journalctl -u rke2-server or journalctl -u rke2-agent. Some systemd configurations may also write combined logs to /var/log/syslog, in which case the rke2 logs will also be available there.",source:"@site/docs/reference/logging.md",sourceDirName:"reference",slug:"/reference/logging",permalink:"/docs-rke2/reference/logging",draft:!1,editUrl:"https://github.com/rancher/rke2-docs/edit/main/docs/reference/logging.md",tags:[],version:"current",lastUpdatedAt:1696529735,formattedLastUpdatedAt:"Oct 5, 2023",frontMatter:{title:"Logging"},sidebar:"mySidebar",previous:{title:"Agent Configuration Reference",permalink:"/docs-rke2/reference/linux_agent_config"},next:{title:"Server Configuration Reference",permalink:"/docs-rke2/reference/server_config"}},c={},s=[],p={toc:s},u="wrapper";function g(e){let{components:n,...r}=e;return(0,o.kt)(u,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"When running with systemd, logs are sent to journald and can be viewed using ",(0,o.kt)("inlineCode",{parentName:"p"},"journalctl -u rke2-server")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"journalctl -u rke2-agent"),". Some systemd configurations may also write combined logs to ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/log/syslog"),", in which case the rke2 logs will also be available there."),(0,o.kt)("p",null,"The Containerd logs are written to ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/lib/rancher/rke2/agent/containerd/containerd.log"),"."),(0,o.kt)("p",null,"The kubelet logs are written to ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/lib/rancher/rke2/agent/logs/kubelet.log"),"."),(0,o.kt)("p",null,"Etcd and the Kubernetes control-plane components run as static Pods in the ",(0,o.kt)("inlineCode",{parentName:"p"},"kube-system")," namespace."),(0,o.kt)("p",null,"Logs from each Kubernetes Pod can be accessed with ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml logs -n kube-system -l component=kube-apiserver\n")),(0,o.kt)("p",null,"Logs from each container are written to ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/log/pods")," or can be accessed with ",(0,o.kt)("inlineCode",{parentName:"p"},"crictl"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export CONTAINER_RUNTIME_ENDPOINT=unix:///run/k3s/containerd/containerd.sock\n# list running containers\n/var/lib/rancher/rke2/bin/crictl ps\n# get logs from container by container id\n/var/lib/rancher/rke2/bin/crictl logs <container_id>\n")))}g.isMDXComponent=!0}}]);